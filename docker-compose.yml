version: "3.8"

services:
  database:
    build: ./database
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    secrets:
      - db_password
    networks:
      - database
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      database:
        condition: service_healthy
    secrets:
      - db_password
    networks:
      - backend
      - database
    expose:
      - "3000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - public
      - backend
    expose:
      - "3000"

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
    networks:
      - public
      - backend

secrets:
  db_password:
    file: ./secrets/db_password.txt

volumes:
  postgres_data:

networks:
  public:
    driver: bridge
  backend:
    driver: bridge
  database:
    driver: bridge
    internal: true
